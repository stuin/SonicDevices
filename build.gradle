plugins {
	id 'fabric-loom' version '0.9-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
	maven {
		name = "Modmuss50"
		url = "https://maven.modmuss50.me/"
	}
	maven {
		name = "grondag"
		url = "https://grondag-repo.appspot.com"
		credentials {
			username "guest"
			password ""
		}
	}
	/*maven {
		url = 'http://server.bbkr.space:8081/artifactory/libs-release'
	}
	maven {
		url = 'https://jitpack.io'
	}*/
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//SonicDevices api
	/*def sonicVersion = "com.github.stuin:sonic-devices-api:${project.sonicapi_version}"
	modImplementation sonicVersion
	include sonicVersion

	//Wrenchable api
	def wrenchVersion = "com.zundrel:wrenchable:${project.wrenchable_version}"
	modImplementation wrenchVersion
	include wrenchVersion*/

	//Simple Drawers
	/*def drawerVersion = "com.github.benfah:SimpleDrawers:${project.drawers_version}"
	modImplementation (drawerVersion) {
		exclude group: "mcp.mobius.waila"
		exclude group: "io.github.prospector"
	}
	modRuntime(drawerVersion) {
		exclude group: "mcp.mobius.waila"
		exclude group: "io.github.prospector"
	}

	//EZPAS
	def ezpasVersion = "com.github.cakewhip:ezpas:${project.ezpas_version}"
	modImplementation ezpasVersion
	modRuntime ezpasVersion*/
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	options.release = 16
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
	repositories {
	}
}
